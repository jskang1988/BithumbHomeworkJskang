//
//  CoinListWorker.swift
//  BithumbHomeworkJskang
//
//  Created by 강진석 on 2021/03/02.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

class CoinListWorker
{
    // 모든 코인 목록을 가져옴
    public func loadAllCoinList() -> Observable<[CoinData]?>{
        return Observable.create { (observer) -> Disposable in
            
            ApiManager.shared.getCoinList { (coinList) in
                observer.onNext(coinList)
                observer.onCompleted()
            }
            return Disposables.create()
        }
    }
    
    // 비트코인 정보를 가져옴
    public func loadBTCCoin() -> Observable<CoinData?>{
        return Observable.create { (observer) -> Disposable in
            
            ApiManager.shared.getCoinByCurrency(currency: "BTC") { (btcCoin) in
                observer.onNext(btcCoin)
                observer.onCompleted()
            }
            return Disposables.create()
        }
    }
    
    // 검색어에 따른 목록 재구성
    func queryFilterCoinList(coinList:[CoinData], query:String?) -> [CoinData] {
        var resultCoinList:[CoinData] = [CoinData].init()
        if let text = query {
            resultCoinList = coinList.filter({
                return $0.currency.uppercased().hasPrefix(text.uppercased())
            })
        }
        return resultCoinList
    }
    
    // 즐겨찾기 추가 여부에 따른 코인 목록 재구성
    func bookmarkFilterCoinList(coinList:[CoinData], tapIndex:Int) -> [CoinData] {
        var resultCoinList:[CoinData] = coinList
        if tapIndex == 1 {
            resultCoinList = coinList.filter({
                return BookmarkUserDefaultManager.shared.isExistCurrency(currency: $0.currency.uppercased())
            })
        }
        return resultCoinList
    }
    
    // 정렬방식 선택에 따른 코인 목록 재구성
    func sortCoinList(coinList:[CoinData], sortIndex:Int, state:SortState) -> [CoinData]{
        var resultCoinList:[CoinData] = [CoinData].init()
        if sortIndex == 0 {
            resultCoinList = self.sortCoinListByName(coinList: coinList, state: state)
        }
        else if sortIndex == 1 {
            resultCoinList = self.sortCoinListByLast(coinList: coinList, state: state)
        }
        else if sortIndex == 2 {
            resultCoinList = self.sortCoinListByChangePercent(coinList: coinList, state: state)
        }
        
        return resultCoinList
    }
    
    // 이름 기준으로 오름차순 또는 내림차순 정렬
    func sortCoinListByName(coinList:[CoinData], state:SortState) -> [CoinData] {
        let resultCoinList = coinList.sorted {
            state == .down ? ($0.currency < $1.currency) : ($0.currency > $1.currency)
        }
        return resultCoinList
    }
    
    // 현재가 기준으로 오름차순 또는 내림차순 정렬
    func sortCoinListByLast(coinList:[CoinData], state:SortState) -> [CoinData] {
        let resultCoinList = coinList.sorted {
            state == .down ? ($0.last < $1.last) : ($0.last > $1.last)
        }
        return resultCoinList
    }
    
    // 등락률 기준으로 오름차순 또는 내림차순 정렬
    func sortCoinListByChangePercent(coinList:[CoinData], state:SortState) -> [CoinData] {
        let resultCoinList = coinList.sorted {
            state == .down ? ($0.changePercent < $1.changePercent) : ($0.changePercent > $1.changePercent)
        }
        return resultCoinList
    }
    
}
